# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

steps:
- task: JFrogToolsInstaller@1
  inputs:
    artifactoryConnection: 'hts2-new'
    cliInstallationRepo: 'jfrog-cli-v2-new'
    installCustomVersion: true
    cliVersion: '2.19.0'
    installExtractors: true
    extractorsInstallationRepo: 'extractors'
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: '$env:MAVEN_OPTS="-Xms1024m -Xmx4096m -client -XX:MaxPermSize=500m  -XX:+TieredCompilation -XX:TieredStopAtLevel=1 -Xverify:none"'
- task: JFrogMaven@1
  inputs:
    mavenPomFile: 'pom.xml'
    goals: 'install'
    artifactoryResolverService: 'hts2-new'
    targetResolveReleaseRepo: 'azure-libs-release'
    targetResolveSnapshotRepo: 'azure-libs-snapshot'
    artifactoryDeployService: 'hts2-new'
    targetDeployReleaseRepo: 'azure-libs-release-local'
    targetDeploySnapshotRepo: 'azure-libs-snapshot-local'
    collectBuildInfo: true
    buildName: '$(Build.DefinitionName)'
    buildNumber: '$(Build.BuildNumber)'
- task: JFrogPublishBuildInfo@1
  inputs:
    artifactoryConnection: 'hts2-new'
    buildName: '$(Build.DefinitionName)'
    buildNumber: '$(Build.BuildNumber)'
- task: JFrogBuildScan@1
  inputs:
    xrayConnection: 'hts2-xray'
    buildName: '$(Build.DefinitionName)'
    buildNumber: '$(Build.BuildNumber)'
    allowFailBuild: true
    vuln: true
