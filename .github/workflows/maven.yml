# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Harish-githactions-xray

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Setup JFrog CLI
      uses: jfrog/setup-jfrog-cli@v3.0.0     
      env:
          JF_URL: ${{ secrets.JF_URL }}
          JF_USER: ${{ secrets.JF_USER }}
          JF_ACCESS_TOKEN: ${{ secrets.JF_ACCESS_TOKEN }}
    - run: |
       jf c show
       jf rt ping
    - run: |
       jf mvn-config --global --server-id-resolve=hts2 --repo-resolve-releases=githactions-libs-release --repo-resolve-snapshots=githactions-libs-snapshot --repo-deploy-releases=githactions-libs-release-local --repo-deploy-snapshots=githactions-libs-snapshot-local
    - name: maven-build
      run: |
        jf mvn clean install
    - name: Publish to saas instance
      run: |     
        jf rt bp test
    - name: Xray scan
      run: |
        jfrog rt build-scan --fail=false
      env:
          JF_ARTIFACTORY_1: ${{ secrets.HARISH_CLI_GITHUB_ACTIONS }}
       
