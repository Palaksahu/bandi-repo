# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
    - name: Setup JFrog CLI
      uses: jfrog/setup-jfrog-cli@v3.0.0
      env:
          JF_ARTIFACTORY_1: ${{ secrets.HARISH_CLI_GITHUB_ACTIONS }}
    - run: |
       jf mvn-config --global --server-id-resolve=hts2 --repo-resolve-releases=githactions-libs-release --repo-resolve-snapshots=githactions-libs-snapshot --repo-deploy-releases=githactions-libs-release-local --repo-deploy-snapshots=githactions-libs-snapshot-local
    - name: Publish and promote in saas instance
      run: |
        jf mvn clean install --build-name test --build-number 4.0.0
        jf rt bp test 4.0.0
        jf rt bs test 4.0.0
      env:
          JF_ARTIFACTORY_1: ${{ secrets.HARISH_CLI_GITHUB_ACTIONS }}
       
